# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

workflows:
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: staging

version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.4

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv envs
            source ./envs/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./envs
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: activate env and run tests
          command: |
            source ./envs/bin/activate
            echo "I am Phuoc Do" > testfile.txt
            git config user.email "${gitEmail}"
            git config user.name "${gitUser}"
            git add .
            git config user.name
            git config user.email
            git commit -m "from circleci with love"
            git push -u origin development

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.4
    working_directory: ~/repo
    steps:
      - run:
          name: list files
          command: |
            pwd
            pip list